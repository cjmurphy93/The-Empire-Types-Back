{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/random-words/index.js","webpack:///./src/scripts/enemy.js","webpack:///./src/scripts/background.js","webpack:///./src/scripts/player.js","webpack:///./src/scripts/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","wordList","words","options","word","maxLength","wordUsed","rightSize","generateRandomWord","length","generateWordWithMaxLength","randInt","lessThan","Math","floor","random","exactly","min","max","wordsPerString","formatter","separator","total","results","token","relativeIndex","push","join","randomWords","require","Enemy","canvas","ctx","speed","shipPos","this","rendered","shipImg","Image","src","sprites","dz","dx","attacking","atf","draw","attack","drawImage","width","height","fillStyle","font","textAlign","fillText","Background","bImage","bTFrames","bBFrames","tFrame","bFrame","clearRect","Player","pImg","navScreenFrames","nSF","health","scoreFrames","score","tens","ones","Game","bgCtx","pCtx","background","focused","startGame","ships","player","startPositions","usedStartPos","animate","animateBackground","start","createEnemy","generateEnemies","generateAttacks","enemyAttack","window","innerWidth","innerHeight","ship","splice","requestAnimationFrame","document","getElementById","autofocus","onblur","onfocus","playerWord","addEventListener","focus","setInterval","enemy","x","shift","delay","setTimeout","indexOf","getContext","inputSection","e","preventDefault","newGame","checkWord","toLowerCase","trim","reset","removeSplash","startBtn","type","style","display","removeEventListener"],"mappings":"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AAO,UAAW,UAAW,YAAa,UAAW,SAAU,SAAU,WAAY,MAAO,SAAU,WAAY,QAAS,OAAQ,UAAW,WAAY,MAAO,QAAS,MAAO,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,QAAS,SAAU,UAAW,WAAY,QAAS,UAAW,QAAS,SAAU,OAAQ,WAAY,SAAU,WAAY,SAAU,SAAU,OAAQ,SAAU,OAAQ,OAAQ,SAAU,QAAS,OAAQ,SAAU,YAAa,YAAa,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,aAAc,QAAS,OAAQ,WAAY,WAAY,WAAY,WAAY,OAAQ,MAAO,WAAY,QAAS,OAAQ,SAAU,QAAS,WAAY,YAAa,WAAY,UAAW,UAAW,YAAa,QAAS,WAAY,SAAU,UAAW,WAAY,QAAS,QAAS,YAAa,YAAa,YAAa,UAAW,UAAW,QAAS,WAAY,UAAW,UAAW,UAAW,UAAW,aAAc,UAAW,WAAY,WAAY,SAAU,WAAY,WAAY,aAAc,QAAS,QAAS,UAAW,SAAU,OAAQ,QAAS,OAAQ,SAAU,UAAW,OAAQ,MAAO,UAAW,UAAW,QAAS,WAAY,QAAS,UAAW,QAAS,UAAW,QAAS,SAAU,OAAQ,QAAS,WAAY,OAAQ,QAAS,MAAO,QAAS,QAAS,UAAW,OAAQ,SAAU,MAAO,OAAQ,QAAS,OAAQ,SAAU,QAAS,OAAQ,UAAW,OAAQ,SAAU,SAAU,UAAW,SAAU,WAAY,YAAa,SAAU,MAAO,QAAS,UAAW,SAAU,UAAW,UAAW,eAAgB,YAAa,SAAU,aAAc,WAAY,SAAU,SAAU,UAAW,UAAW,SAAU,YAAa,UAAW,WAAY,UAAW,OAAQ,SAAU,SAAU,SAAU,QAAS,SAAU,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,OAAQ,SAAU,QAAS,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,MAAO,SAAU,SAAU,OAAQ,QAAS,MAAO,UAAW,OAAQ,MAAO,SAAU,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,aAAc,YAAa,OAAQ,QAAS,MAAO,MAAO,QAAS,SAAU,QAAS,SAAU,UAAW,aAAc,YAAa,QAAS,SAAU,MAAO,SAAU,SAAU,OAAQ,SAAU,SAAU,UAAW,MAAO,OAAQ,SAAU,QAAS,OAAQ,SAAU,SAAU,YAAa,OAAQ,OAAQ,QAAS,OAAQ,WAAY,WAAY,SAAU,UAAW,QAAS,UAAW,OAAQ,UAAW,SAAU,WAAY,QAAS,UAAW,QAAS,SAAU,QAAS,UAAW,QAAS,UAAW,QAAS,QAAS,QAAS,MAAO,QAAS,QAAS,QAAS,SAAU,UAAW,QAAS,WAAY,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,QAAS,UAAW,OAAQ,SAAU,WAAY,QAAS,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,OAAQ,SAAU,UAAW,SAAU,OAAQ,QAAS,SAAU,UAAW,SAAU,WAAY,SAAU,QAAS,OAAQ,SAAU,OAAQ,SAAU,MAAO,UAAW,YAAa,MAAO,OAAQ,QAAS,OAAQ,MAAO,QAAS,QAAS,QAAS,QAAS,QAAS,SAAU,WAAY,OAAQ,UAAW,QAAS,OAAQ,SAAU,QAAS,UAAW,WAAY,QAAS,QAAS,QAAS,SAAU,QAAS,OAAQ,KAAM,OAAQ,SAAU,UAAW,OAAQ,SAAU,OAAQ,QAAS,OAAQ,UAAW,QAAS,WAAY,QAAS,OAAQ,WAAY,UAAW,UAAW,YAAa,WAAY,YAAa,MAAO,OAAQ,OAAQ,OAAQ,QAAS,SAAU,QAAS,WAAY,QAAS,QAAS,UAAW,UAAW,WAAY,SAAU,QAAS,QAAS,QAAS,QAAS,SAAU,OAAQ,SAAU,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,QAAS,SAAU,QAAS,WAAY,OAAQ,SAAU,QAAS,QAAS,YAAa,UAAW,OAAQ,SAAU,QAAS,QAAS,QAAS,QAAS,OAAQ,UAAW,QAAS,QAAS,QAAS,QAAS,UAAW,QAAS,QAAS,OAAQ,UAAW,QAAS,QAAS,QAAS,QAAS,WAAY,UAAW,WAAY,QAAS,SAAU,SAAU,WAAY,UAAW,SAAU,SAAU,QAAS,SAAU,WAAY,SAAU,YAAa,WAAY,QAAS,UAAW,UAAW,WAAY,UAAW,YAAa,UAAW,aAAc,OAAQ,SAAU,WAAY,QAAS,UAAW,OAAQ,MAAO,SAAU,MAAO,WAAY,SAAU,SAAU,UAAW,UAAW,OAAQ,UAAW,WAAY,aAAc,OAAQ,QAAS,QAAS,OAAQ,WAAY,QAAS,QAAS,WAAY,SAAU,SAAU,QAAS,OAAQ,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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var wordList = [// Borrowed from xkcd password generator which borrowed it from wherever\n\"ability\", \"able\", \"aboard\", \"about\", \"above\", \"accept\", \"accident\", \"according\", \"account\", \"accurate\", \"acres\", \"across\", \"act\", \"action\", \"active\", \"activity\", \"actual\", \"actually\", \"add\", \"addition\", \"additional\", \"adjective\", \"adult\", \"adventure\", \"advice\", \"affect\", \"afraid\", \"after\", \"afternoon\", \"again\", \"against\", \"age\", \"ago\", \"agree\", \"ahead\", \"aid\", \"air\", \"airplane\", \"alike\", \"alive\", \"all\", \"allow\", \"almost\", \"alone\", \"along\", \"aloud\", \"alphabet\", \"already\", \"also\", \"although\", \"am\", \"among\", \"amount\", \"ancient\", \"angle\", \"angry\", \"animal\", \"announced\", \"another\", \"answer\", \"ants\", \"any\", \"anybody\", \"anyone\", \"anything\", \"anyway\", \"anywhere\", \"apart\", \"apartment\", \"appearance\", \"apple\", \"applied\", \"appropriate\", \"are\", \"area\", \"arm\", \"army\", \"around\", \"arrange\", \"arrangement\", \"arrive\", \"arrow\", \"art\", \"article\", \"as\", \"aside\", \"ask\", \"asleep\", \"at\", \"ate\", \"atmosphere\", \"atom\", \"atomic\", \"attached\", \"attack\", \"attempt\", \"attention\", \"audience\", \"author\", \"automobile\", \"available\", \"average\", \"avoid\", \"aware\", \"away\", \"baby\", \"back\", \"bad\", \"badly\", \"bag\", \"balance\", \"ball\", \"balloon\", \"band\", \"bank\", \"bar\", \"bare\", \"bark\", \"barn\", \"base\", \"baseball\", \"basic\", \"basis\", \"basket\", \"bat\", \"battle\", \"be\", \"bean\", \"bear\", \"beat\", \"beautiful\", \"beauty\", \"became\", \"because\", \"become\", \"becoming\", \"bee\", \"been\", \"before\", \"began\", \"beginning\", \"begun\", \"behavior\", \"behind\", \"being\", \"believed\", \"bell\", \"belong\", \"below\", \"belt\", \"bend\", \"beneath\", \"bent\", \"beside\", \"best\", \"bet\", \"better\", \"between\", \"beyond\", \"bicycle\", \"bigger\", \"biggest\", \"bill\", \"birds\", \"birth\", \"birthday\", \"bit\", \"bite\", \"black\", \"blank\", \"blanket\", \"blew\", \"blind\", \"block\", \"blood\", \"blow\", \"blue\", \"board\", \"boat\", \"body\", \"bone\", \"book\", \"border\", \"born\", \"both\", \"bottle\", \"bottom\", \"bound\", \"bow\", \"bowl\", \"box\", \"boy\", \"brain\", \"branch\", \"brass\", \"brave\", \"bread\", \"break\", \"breakfast\", \"breath\", \"breathe\", \"breathing\", \"breeze\", \"brick\", \"bridge\", \"brief\", \"bright\", \"bring\", \"broad\", \"broke\", \"broken\", \"brother\", \"brought\", \"brown\", \"brush\", \"buffalo\", \"build\", \"building\", \"built\", \"buried\", \"burn\", \"burst\", \"bus\", \"bush\", \"business\", \"busy\", \"but\", \"butter\", \"buy\", \"by\", \"cabin\", \"cage\", \"cake\", \"call\", \"calm\", \"came\", \"camera\", \"camp\", \"can\", \"canal\", \"cannot\", \"cap\", \"capital\", \"captain\", \"captured\", \"car\", \"carbon\", \"card\", \"care\", \"careful\", \"carefully\", \"carried\", \"carry\", \"case\", \"cast\", \"castle\", \"cat\", \"catch\", \"cattle\", \"caught\", \"cause\", \"cave\", \"cell\", \"cent\", \"center\", \"central\", \"century\", \"certain\", \"certainly\", \"chain\", \"chair\", \"chamber\", \"chance\", \"change\", \"changing\", \"chapter\", \"character\", \"characteristic\", \"charge\", \"chart\", \"check\", \"cheese\", \"chemical\", \"chest\", \"chicken\", \"chief\", \"child\", \"children\", \"choice\", \"choose\", \"chose\", \"chosen\", \"church\", \"circle\", \"circus\", \"citizen\", \"city\", \"class\", \"classroom\", \"claws\", \"clay\", \"clean\", \"clear\", \"clearly\", \"climate\", \"climb\", \"clock\", \"close\", \"closely\", \"closer\", \"cloth\", \"clothes\", \"clothing\", \"cloud\", \"club\", \"coach\", \"coal\", \"coast\", \"coat\", \"coffee\", \"cold\", \"collect\", \"college\", \"colony\", \"color\", \"column\", \"combination\", \"combine\", \"come\", \"comfortable\", \"coming\", \"command\", \"common\", \"community\", \"company\", \"compare\", \"compass\", \"complete\", \"completely\", \"complex\", \"composed\", \"composition\", \"compound\", \"concerned\", \"condition\", \"congress\", \"connected\", \"consider\", \"consist\", \"consonant\", \"constantly\", \"construction\", \"contain\", \"continent\", \"continued\", \"contrast\", \"control\", \"conversation\", \"cook\", \"cookies\", \"cool\", \"copper\", \"copy\", \"corn\", \"corner\", \"correct\", \"correctly\", \"cost\", \"cotton\", \"could\", \"count\", \"country\", \"couple\", \"courage\", \"course\", \"court\", \"cover\", \"cow\", \"cowboy\", \"crack\", \"cream\", \"create\", \"creature\", \"crew\", \"crop\", \"cross\", \"crowd\", \"cry\", \"cup\", \"curious\", \"current\", \"curve\", \"customs\", \"cut\", \"cutting\", \"daily\", \"damage\", \"dance\", \"danger\", \"dangerous\", \"dark\", \"darkness\", \"date\", \"daughter\", \"dawn\", \"day\", \"dead\", \"deal\", \"dear\", \"death\", \"decide\", \"declared\", \"deep\", \"deeply\", \"deer\", \"definition\", \"degree\", \"depend\", \"depth\", \"describe\", \"desert\", \"design\", \"desk\", \"detail\", \"determine\", \"develop\", \"development\", \"diagram\", \"diameter\", \"did\", \"die\", \"differ\", \"difference\", \"different\", \"difficult\", \"difficulty\", \"dig\", \"dinner\", \"direct\", \"direction\", \"directly\", \"dirt\", \"dirty\", \"disappear\", \"discover\", \"discovery\", \"discuss\", \"discussion\", \"disease\", \"dish\", \"distance\", \"distant\", \"divide\", \"division\", \"do\", \"doctor\", \"does\", \"dog\", \"doing\", \"doll\", \"dollar\", \"done\", \"donkey\", \"door\", \"dot\", \"double\", \"doubt\", \"down\", \"dozen\", \"draw\", \"drawn\", \"dream\", \"dress\", \"drew\", \"dried\", \"drink\", \"drive\", \"driven\", \"driver\", \"driving\", \"drop\", \"dropped\", \"drove\", \"dry\", \"duck\", \"due\", \"dug\", \"dull\", \"during\", \"dust\", \"duty\", \"each\", \"eager\", \"ear\", \"earlier\", \"early\", \"earn\", \"earth\", \"easier\", \"easily\", \"east\", \"easy\", \"eat\", \"eaten\", \"edge\", \"education\", \"effect\", \"effort\", \"egg\", \"eight\", \"either\", \"electric\", \"electricity\", \"element\", \"elephant\", \"eleven\", \"else\", \"empty\", \"end\", \"enemy\", \"energy\", \"engine\", \"engineer\", \"enjoy\", \"enough\", \"enter\", \"entire\", \"entirely\", \"environment\", \"equal\", \"equally\", \"equator\", \"equipment\", \"escape\", \"especially\", \"essential\", \"establish\", \"even\", \"evening\", \"event\", \"eventually\", \"ever\", \"every\", \"everybody\", \"everyone\", \"everything\", \"everywhere\", \"evidence\", \"exact\", \"exactly\", \"examine\", \"example\", \"excellent\", \"except\", \"exchange\", \"excited\", \"excitement\", \"exciting\", \"exclaimed\", \"exercise\", \"exist\", \"expect\", \"experience\", \"experiment\", \"explain\", \"explanation\", \"explore\", \"express\", \"expression\", \"extra\", \"eye\", \"face\", \"facing\", \"fact\", \"factor\", \"factory\", \"failed\", \"fair\", \"fairly\", \"fall\", \"fallen\", \"familiar\", \"family\", \"famous\", \"far\", \"farm\", \"farmer\", \"farther\", \"fast\", \"fastened\", \"faster\", \"fat\", \"father\", \"favorite\", \"fear\", \"feathers\", \"feature\", \"fed\", \"feed\", \"feel\", \"feet\", \"fell\", \"fellow\", \"felt\", \"fence\", \"few\", \"fewer\", \"field\", \"fierce\", \"fifteen\", \"fifth\", \"fifty\", \"fight\", \"fighting\", \"figure\", \"fill\", \"film\", \"final\", \"finally\", \"find\", \"fine\", \"finest\", \"finger\", \"finish\", \"fire\", \"fireplace\", \"firm\", \"first\", \"fish\", \"five\", \"fix\", \"flag\", \"flame\", \"flat\", \"flew\", \"flies\", \"flight\", \"floating\", \"floor\", \"flow\", \"flower\", \"fly\", \"fog\", \"folks\", \"follow\", \"food\", \"foot\", \"football\", \"for\", \"force\", \"foreign\", \"forest\", \"forget\", \"forgot\", \"forgotten\", \"form\", \"former\", \"fort\", \"forth\", \"forty\", \"forward\", \"fought\", \"found\", \"four\", \"fourth\", \"fox\", \"frame\", \"free\", \"freedom\", \"frequently\", \"fresh\", \"friend\", \"friendly\", \"frighten\", \"frog\", \"from\", \"front\", \"frozen\", \"fruit\", \"fuel\", \"full\", \"fully\", \"fun\", \"function\", \"funny\", \"fur\", \"furniture\", \"further\", \"future\", \"gain\", \"game\", \"garage\", \"garden\", \"gas\", \"gasoline\", \"gate\", \"gather\", \"gave\", \"general\", \"generally\", \"gentle\", \"gently\", \"get\", \"getting\", \"giant\", \"gift\", \"girl\", \"give\", \"given\", \"giving\", \"glad\", \"glass\", \"globe\", \"go\", \"goes\", \"gold\", \"golden\", \"gone\", \"good\", \"goose\", \"got\", \"government\", \"grabbed\", \"grade\", \"gradually\", \"grain\", \"grandfather\", \"grandmother\", \"graph\", \"grass\", \"gravity\", \"gray\", \"great\", \"greater\", \"greatest\", \"greatly\", \"green\", \"grew\", \"ground\", \"group\", \"grow\", \"grown\", \"growth\", \"guard\", \"guess\", \"guide\", \"gulf\", \"gun\", \"habit\", \"had\", \"hair\", \"half\", \"halfway\", \"hall\", \"hand\", \"handle\", \"handsome\", \"hang\", \"happen\", \"happened\", \"happily\", \"happy\", \"harbor\", \"hard\", \"harder\", \"hardly\", \"has\", \"hat\", \"have\", \"having\", \"hay\", \"he\", \"headed\", \"heading\", \"health\", \"heard\", \"hearing\", \"heart\", \"heat\", \"heavy\", \"height\", \"held\", \"hello\", \"help\", \"helpful\", \"her\", \"herd\", \"here\", \"herself\", \"hidden\", \"hide\", \"high\", \"higher\", \"highest\", \"highway\", \"hill\", \"him\", \"himself\", \"his\", \"history\", \"hit\", \"hold\", \"hole\", \"hollow\", \"home\", \"honor\", \"hope\", \"horn\", \"horse\", \"hospital\", \"hot\", \"hour\", \"house\", \"how\", \"however\", \"huge\", \"human\", \"hundred\", \"hung\", \"hungry\", \"hunt\", \"hunter\", \"hurried\", \"hurry\", \"hurt\", \"husband\", \"ice\", \"idea\", \"identity\", \"if\", \"ill\", \"image\", \"imagine\", \"immediately\", \"importance\", \"important\", \"impossible\", \"improve\", \"in\", \"inch\", \"include\", \"including\", \"income\", \"increase\", \"indeed\", \"independent\", \"indicate\", \"individual\", \"industrial\", \"industry\", \"influence\", \"information\", \"inside\", \"instance\", \"instant\", \"instead\", \"instrument\", \"interest\", \"interior\", \"into\", \"introduced\", \"invented\", \"involved\", \"iron\", \"is\", \"island\", \"it\", \"its\", \"itself\", \"jack\", \"jar\", \"jet\", \"job\", \"join\", \"joined\", \"journey\", \"joy\", \"judge\", \"jump\", \"jungle\", \"just\", \"keep\", \"kept\", \"key\", \"kids\", \"kill\", \"kind\", \"kitchen\", \"knew\", \"knife\", \"know\", \"knowledge\", \"known\", \"label\", \"labor\", \"lack\", \"lady\", \"laid\", \"lake\", \"lamp\", \"land\", \"language\", \"large\", \"larger\", \"largest\", \"last\", \"late\", \"later\", \"laugh\", \"law\", \"lay\", \"layers\", \"lead\", \"leader\", \"leaf\", \"learn\", \"least\", \"leather\", \"leave\", \"leaving\", \"led\", \"left\", \"leg\", \"length\", \"lesson\", \"let\", \"letter\", \"level\", \"library\", \"lie\", \"life\", \"lift\", \"light\", \"like\", \"likely\", \"limited\", \"line\", \"lion\", \"lips\", \"liquid\", \"list\", \"listen\", \"little\", \"live\", \"living\", \"load\", \"local\", \"locate\", \"location\", \"log\", \"lonely\", \"long\", \"longer\", \"look\", \"loose\", \"lose\", \"loss\", \"lost\", \"lot\", \"loud\", \"love\", \"lovely\", \"low\", \"lower\", \"luck\", \"lucky\", \"lunch\", \"lungs\", \"lying\", \"machine\", \"machinery\", \"mad\", \"made\", \"magic\", \"magnet\", \"mail\", \"main\", \"mainly\", \"major\", \"make\", \"making\", \"man\", \"managed\", \"manner\", \"manufacturing\", \"many\", \"map\", \"mark\", \"market\", \"married\", \"mass\", \"massage\", \"master\", \"material\", \"mathematics\", \"matter\", \"may\", \"maybe\", \"me\", \"meal\", \"mean\", \"means\", \"meant\", \"measure\", \"meat\", \"medicine\", \"meet\", \"melted\", \"member\", \"memory\", \"men\", \"mental\", \"merely\", \"met\", \"metal\", \"method\", \"mice\", \"middle\", \"might\", \"mighty\", \"mile\", \"military\", \"milk\", \"mill\", \"mind\", \"mine\", \"minerals\", \"minute\", \"mirror\", \"missing\", \"mission\", \"mistake\", \"mix\", \"mixture\", \"model\", \"modern\", \"molecular\", \"moment\", \"money\", \"monkey\", \"month\", \"mood\", \"moon\", \"more\", \"morning\", \"most\", \"mostly\", \"mother\", \"motion\", \"motor\", \"mountain\", \"mouse\", \"mouth\", \"move\", \"movement\", \"movie\", \"moving\", \"mud\", \"muscle\", \"music\", \"musical\", \"must\", \"my\", \"myself\", \"mysterious\", \"nails\", \"name\", \"nation\", \"national\", \"native\", \"natural\", \"naturally\", \"nature\", \"near\", \"nearby\", \"nearer\", \"nearest\", \"nearly\", \"necessary\", \"neck\", \"needed\", \"needle\", \"needs\", \"negative\", \"neighbor\", \"neighborhood\", \"nervous\", \"nest\", \"never\", \"new\", \"news\", \"newspaper\", \"next\", \"nice\", \"night\", \"nine\", \"no\", \"nobody\", \"nodded\", \"noise\", \"none\", \"noon\", \"nor\", \"north\", \"nose\", \"not\", \"note\", \"noted\", \"nothing\", \"notice\", \"noun\", \"now\", \"number\", \"numeral\", \"nuts\", \"object\", \"observe\", \"obtain\", \"occasionally\", \"occur\", \"ocean\", \"of\", \"off\", \"offer\", \"office\", \"officer\", \"official\", \"oil\", \"old\", \"older\", \"oldest\", \"on\", \"once\", \"one\", \"only\", \"onto\", \"open\", \"operation\", \"opinion\", \"opportunity\", \"opposite\", \"or\", \"orange\", \"orbit\", \"order\", \"ordinary\", \"organization\", \"organized\", \"origin\", \"original\", \"other\", \"ought\", \"our\", \"ourselves\", \"out\", \"outer\", \"outline\", \"outside\", \"over\", \"own\", \"owner\", \"oxygen\", \"pack\", \"package\", \"page\", \"paid\", \"pain\", \"paint\", \"pair\", \"palace\", \"pale\", \"pan\", \"paper\", \"paragraph\", \"parallel\", \"parent\", \"park\", \"part\", \"particles\", \"particular\", \"particularly\", \"partly\", \"parts\", \"party\", \"pass\", \"passage\", \"past\", \"path\", \"pattern\", \"pay\", \"peace\", \"pen\", \"pencil\", \"people\", \"per\", \"percent\", \"perfect\", \"perfectly\", \"perhaps\", \"period\", \"person\", \"personal\", \"pet\", \"phrase\", \"physical\", \"piano\", \"pick\", \"picture\", \"pictured\", \"pie\", \"piece\", \"pig\", \"pile\", \"pilot\", \"pine\", \"pink\", \"pipe\", \"pitch\", \"place\", \"plain\", \"plan\", \"plane\", \"planet\", \"planned\", \"planning\", \"plant\", \"plastic\", \"plate\", \"plates\", \"play\", \"pleasant\", \"please\", \"pleasure\", \"plenty\", \"plural\", \"plus\", \"pocket\", \"poem\", \"poet\", \"poetry\", \"point\", \"pole\", \"police\", \"policeman\", \"political\", \"pond\", \"pony\", \"pool\", \"poor\", \"popular\", \"population\", \"porch\", \"port\", \"position\", \"positive\", \"possible\", \"possibly\", \"post\", \"pot\", \"potatoes\", \"pound\", \"pour\", \"powder\", \"power\", \"powerful\", \"practical\", \"practice\", \"prepare\", \"present\", \"president\", \"press\", \"pressure\", \"pretty\", \"prevent\", \"previous\", \"price\", \"pride\", \"primitive\", \"principal\", \"principle\", \"printed\", \"private\", \"prize\", \"probably\", \"problem\", \"process\", \"produce\", \"product\", \"production\", \"program\", \"progress\", \"promised\", \"proper\", \"properly\", \"property\", \"protection\", \"proud\", \"prove\", \"provide\", \"public\", \"pull\", \"pupil\", \"pure\", \"purple\", \"purpose\", \"push\", \"put\", \"putting\", \"quarter\", \"queen\", \"question\", \"quick\", \"quickly\", \"quiet\", \"quietly\", \"quite\", \"rabbit\", \"race\", \"radio\", \"railroad\", \"rain\", \"raise\", \"ran\", \"ranch\", \"range\", \"rapidly\", \"rate\", \"rather\", \"raw\", \"rays\", \"reach\", \"read\", \"reader\", \"ready\", \"real\", \"realize\", \"rear\", \"reason\", \"recall\", \"receive\", \"recent\", \"recently\", \"recognize\", \"record\", \"red\", \"refer\", \"refused\", \"region\", \"regular\", \"related\", \"relationship\", \"religious\", \"remain\", \"remarkable\", \"remember\", \"remove\", \"repeat\", \"replace\", \"replied\", \"report\", \"represent\", \"require\", \"research\", \"respect\", \"rest\", \"result\", \"return\", \"review\", \"rhyme\", \"rhythm\", \"rice\", \"rich\", \"ride\", \"riding\", \"right\", \"ring\", \"rise\", \"rising\", \"river\", \"road\", \"roar\", \"rock\", \"rocket\", \"rocky\", \"rod\", \"roll\", \"roof\", \"room\", \"root\", \"rope\", \"rose\", \"rough\", \"round\", \"route\", \"row\", \"rubbed\", \"rubber\", \"rule\", \"ruler\", \"run\", \"running\", \"rush\", \"sad\", \"saddle\", \"safe\", \"safety\", \"said\", \"sail\", \"sale\", \"salmon\", \"salt\", \"same\", \"sand\", \"sang\", \"sat\", \"satellites\", \"satisfied\", \"save\", \"saved\", \"saw\", \"say\", \"scale\", \"scared\", \"scene\", \"school\", \"science\", \"scientific\", \"scientist\", \"score\", \"screen\", \"sea\", \"search\", \"season\", \"seat\", \"second\", \"secret\", \"section\", \"see\", \"seed\", \"seeing\", \"seems\", \"seen\", \"seldom\", \"select\", \"selection\", \"sell\", \"send\", \"sense\", \"sent\", \"sentence\", \"separate\", \"series\", \"serious\", \"serve\", \"service\", \"sets\", \"setting\", \"settle\", \"settlers\", \"seven\", \"several\", \"shade\", \"shadow\", \"shake\", \"shaking\", \"shall\", \"shallow\", \"shape\", \"share\", \"sharp\", \"she\", \"sheep\", \"sheet\", \"shelf\", \"shells\", \"shelter\", \"shine\", \"shinning\", \"ship\", \"shirt\", \"shoe\", \"shoot\", \"shop\", \"shore\", \"short\", \"shorter\", \"shot\", \"should\", \"shoulder\", \"shout\", \"show\", \"shown\", \"shut\", \"sick\", \"sides\", \"sight\", \"sign\", \"signal\", \"silence\", \"silent\", \"silk\", \"silly\", \"silver\", \"similar\", \"simple\", \"simplest\", \"simply\", \"since\", \"sing\", \"single\", \"sink\", \"sister\", \"sit\", \"sitting\", \"situation\", \"six\", \"size\", \"skill\", \"skin\", \"sky\", \"slabs\", \"slave\", \"sleep\", \"slept\", \"slide\", \"slight\", \"slightly\", \"slip\", \"slipped\", \"slope\", \"slow\", \"slowly\", \"small\", \"smaller\", \"smallest\", \"smell\", \"smile\", \"smoke\", \"smooth\", \"snake\", \"snow\", \"so\", \"soap\", \"social\", \"society\", \"soft\", \"softly\", \"soil\", \"solar\", \"sold\", \"soldier\", \"solid\", \"solution\", \"solve\", \"some\", \"somebody\", \"somehow\", \"someone\", \"something\", \"sometime\", \"somewhere\", \"son\", \"song\", \"soon\", \"sort\", \"sound\", \"source\", \"south\", \"southern\", \"space\", \"speak\", \"special\", \"species\", \"specific\", \"speech\", \"speed\", \"spell\", \"spend\", \"spent\", \"spider\", \"spin\", \"spirit\", \"spite\", \"split\", \"spoken\", \"sport\", \"spread\", \"spring\", \"square\", \"stage\", \"stairs\", \"stand\", \"standard\", \"star\", \"stared\", \"start\", \"state\", \"statement\", \"station\", \"stay\", \"steady\", \"steam\", \"steel\", \"steep\", \"stems\", \"step\", \"stepped\", \"stick\", \"stiff\", \"still\", \"stock\", \"stomach\", \"stone\", \"stood\", \"stop\", \"stopped\", \"store\", \"storm\", \"story\", \"stove\", \"straight\", \"strange\", \"stranger\", \"straw\", \"stream\", \"street\", \"strength\", \"stretch\", \"strike\", \"string\", \"strip\", \"strong\", \"stronger\", \"struck\", \"structure\", \"struggle\", \"stuck\", \"student\", \"studied\", \"studying\", \"subject\", \"substance\", \"success\", \"successful\", \"such\", \"sudden\", \"suddenly\", \"sugar\", \"suggest\", \"suit\", \"sum\", \"summer\", \"sun\", \"sunlight\", \"supper\", \"supply\", \"support\", \"suppose\", \"sure\", \"surface\", \"surprise\", \"surrounded\", \"swam\", \"sweet\", \"swept\", \"swim\", \"swimming\", \"swing\", \"swung\", \"syllable\", \"symbol\", \"system\", \"table\", \"tail\", \"take\", \"taken\", \"tales\", \"talk\", \"tall\", \"tank\", \"tape\", \"task\", \"taste\", \"taught\", \"tax\", \"tea\", \"teach\", \"teacher\", \"team\", \"tears\", \"teeth\", \"telephone\", \"television\", \"tell\", \"temperature\", \"ten\", \"tent\", \"term\", \"terrible\", \"test\", \"than\", \"thank\", \"that\", \"thee\", \"them\", \"themselves\", \"then\", \"theory\", \"there\", \"therefore\", \"these\", \"they\", \"thick\", \"thin\", \"thing\", \"think\", \"third\", \"thirty\", \"this\", \"those\", \"thou\", \"though\", \"thought\", \"thousand\", \"thread\", \"three\", \"threw\", \"throat\", \"through\", \"throughout\", \"throw\", \"thrown\", \"thumb\", \"thus\", \"thy\", \"tide\", \"tie\", \"tight\", \"tightly\", \"till\", \"time\", \"tin\", \"tiny\", \"tip\", \"tired\", \"title\", \"to\", \"tobacco\", \"today\", \"together\", \"told\", \"tomorrow\", \"tone\", \"tongue\", \"tonight\", \"too\", \"took\", \"tool\", \"top\", \"topic\", \"torn\", \"total\", \"touch\", \"toward\", \"tower\", \"town\", \"toy\", \"trace\", \"track\", \"trade\", \"traffic\", \"trail\", \"train\", \"transportation\", \"trap\", \"travel\", \"treated\", \"tree\", \"triangle\", \"tribe\", \"trick\", \"tried\", \"trip\", \"troops\", \"tropical\", \"trouble\", \"truck\", \"trunk\", \"truth\", \"try\", \"tube\", \"tune\", \"turn\", \"twelve\", \"twenty\", \"twice\", \"two\", \"type\", \"typical\", \"uncle\", \"under\", \"underline\", \"understanding\", \"unhappy\", \"union\", \"unit\", \"universe\", \"unknown\", \"unless\", \"until\", \"unusual\", \"up\", \"upon\", \"upper\", \"upward\", \"us\", \"use\", \"useful\", \"using\", \"usual\", \"usually\", \"valley\", \"valuable\", \"value\", \"vapor\", \"variety\", \"various\", \"vast\", \"vegetable\", \"verb\", \"vertical\", \"very\", \"vessels\", \"victory\", \"view\", \"village\", \"visit\", \"visitor\", \"voice\", \"volume\", \"vote\", \"vowel\", \"voyage\", \"wagon\", \"wait\", \"walk\", \"wall\", \"want\", \"war\", \"warm\", \"warn\", \"was\", \"wash\", \"waste\", \"watch\", \"water\", \"wave\", \"way\", \"we\", \"weak\", \"wealth\", \"wear\", \"weather\", \"week\", \"weigh\", \"weight\", \"welcome\", \"well\", \"went\", \"were\", \"west\", \"western\", \"wet\", \"whale\", \"what\", \"whatever\", \"wheat\", \"wheel\", \"when\", \"whenever\", \"where\", \"wherever\", \"whether\", \"which\", \"while\", \"whispered\", \"whistle\", \"white\", \"who\", \"whole\", \"whom\", \"whose\", \"why\", \"wide\", \"widely\", \"wife\", \"wild\", \"will\", \"willing\", \"win\", \"wind\", \"window\", \"wing\", \"winter\", \"wire\", \"wise\", \"wish\", \"with\", \"within\", \"without\", \"wolf\", \"women\", \"won\", \"wonder\", \"wonderful\", \"wood\", \"wooden\", \"wool\", \"word\", \"wore\", \"work\", \"worker\", \"world\", \"worried\", \"worry\", \"worse\", \"worth\", \"would\", \"wrapped\", \"write\", \"writer\", \"writing\", \"written\", \"wrong\", \"wrote\", \"yard\", \"year\", \"yellow\", \"yes\", \"yesterday\", \"yet\", \"you\", \"young\", \"younger\", \"your\", \"yourself\", \"youth\", \"zero\", \"zebra\", \"zipper\", \"zoo\", \"zulu\"];\n\nfunction words(options) {\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    var rightSize = false;\n    var wordUsed;\n\n    while (!rightSize) {\n      wordUsed = generateRandomWord();\n\n      if (wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n    }\n\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  function randInt(lessThan) {\n    return Math.floor(Math.random() * lessThan);\n  } // No arguments = generate one word\n\n\n  if (typeof options === 'undefined') {\n    return word();\n  } // Just a number = return that many words\n\n\n  if (typeof options === 'number') {\n    options = {\n      exactly: options\n    };\n  } // options supported: exactly, min, max, join\n\n\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  } // not a number = one word par string\n\n\n  if (typeof options.wordsPerString !== 'number') {\n    options.wordsPerString = 1;\n  } //not a function = returns the raw word\n\n\n  if (typeof options.formatter !== 'function') {\n    options.formatter = word => word;\n  } //not a string = separator is a space\n\n\n  if (typeof options.separator !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; i < total * options.wordsPerString; i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    } else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n\n    relativeIndex++;\n\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = '';\n      relativeIndex = 0;\n    }\n  }\n\n  if (typeof options.join === 'string') {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nmodule.exports = words; // Export the word list as it is often useful\n\nwords.wordList = wordList;","var randomWords = require('random-words');\n\nexport default class Enemy {\n    constructor(canvas, ctx, speed, shipPos) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.word = randomWords();\n        this.speed= speed;\n        this.rendered = true;\n        this.shipImg = new Image();\n        this.shipImg.src = \"./src/assets/tie_fighter.png\";\n        this.sprites = new Image();\n        this.sprites.src = './src/assets/spritesheet.png';\n        this.shipPos = shipPos;\n        this.dz = 0.1;\n        this.dx = (this.shipPos[0] / 256);\n        this.attacking = false;\n        this.atf = 0;\n\n        this.draw = this.draw.bind(this);\n        this.attack = this.attack.bind(this);\n    };\n\n    draw() {\n        \n        this.ctx.drawImage(this.shipImg, ( this.dx * this.canvas.width), ((this.shipPos[1] / 222) * this.canvas.height), (this.dz * (this.canvas.width * (40 / 256))), (this.dz * (this.canvas.height * (40 / 222))));\n        this.ctx.fillStyle = \"#FFFFFF\";\n        this.ctx.font = '20px Red Rose';\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(this.word, (( this.dx * this.canvas.width) + (this.dz *(this.canvas.width * 20/256))), ((this.shipPos[1] / 222) * this.canvas.height));\n        this.attack();\n    };\n\n    animate(){\n        if (this.rendered) {\n        if (this.dz < 1) {\n            this.dz += this.speed;\n            this.dx -= .001;\n        }\n        this.draw();\n        }\n    }\n\n    attack() {\n        if (this.dz >= 1) {\n            if (this.attacking) {\n                this.ctx.drawImage(this.sprites, 771, 450, 245, 68, \n                    // (( this.dx * this.canvas.width) - (this.dz *(this.canvas.width * 122/256))), \n                    ( ((this.shipPos[0] - 125) / 256)* this.canvas.width), \n                    ((((this.shipPos[1] + 25) / 222) * this.canvas.height)), \n                    (this.canvas.width * 245/256), \n                    (this.canvas.height * ((222-(this.shipPos[1] + 25))/ 222)));\n                    this.atf += 1;\n                    if (this.atf > 20) {\n                        this.attacking = false;\n                        this.atf = 0\n                    }\n            }\n        }    \n    }\n}\n","export default class Background {\n    constructor(canvas, ctx, speed) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n        // this.speed = speed;\n        this.bImage = new Image();\n        this.bImage.src = './src/assets/spritesheet.png';\n        this.height = this.canvas.height;\n        this.width = this.canvas.width;\n        this.bTFrames = [2, 260, 518, 776, 1034];\n        this.bBFrames = [2, 260, 518, 776, 1034, 1292];\n        this.tFrame = 0;\n        this.bFrame = 0;\n        // this.y = 0;\n    };\n\n    animate() {\n        this.ctx.clearRect(0, 0, this.width, this.height);\n        this.ctx.drawImage(this.bImage, this.bBFrames[this.bFrame], 226, 256, 222, 0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.drawImage(this.bImage, this.bTFrames[this.tFrame], 2, 256, 222, 0, 0, this.canvas.width, this.canvas.height);\n        this.bFrame += 1;\n        this.tFrame += 1;\n        if (this.bFrame > 5) this.bFrame = 0;\n        if (this.tFrame > 4) this.tFrame = 0;\n    };\n}","export default class Player {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.pImg = new Image();\n    this.pImg.src = \"./src/assets/spritesheet.png\";\n    this.navScreenFrames = [260, 316];\n    this.nSF = 0;\n    this.health = 10;\n    this.scoreFrames = [337, 328, 270, 277, 285, 292, 299, 306, 313, 320];\n    this.score = 0;\n  }\n\n\n  animate() {\n        this.ctx.drawImage(this.pImg, 2, 450, 256, 163, 0, ((59 / 222) * this.canvas.height), this.canvas.width, ((163 / 222) * this.canvas.height));\n        this.ctx.drawImage(this.pImg, this.navScreenFrames[this.nSF], 580, 54, 33, ((101 / 256) * this.canvas.width), ((176 / 222) * this.canvas.height), ((54 / 256) * this.canvas.width), ((33 / 222) * this.canvas.height));\n        this.nSF += 1;\n        if (this.nSF > 1) this.nSF = 0;\n\n        if ( this.health <= 9 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((161 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 8 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((153 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 7 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((145 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 6 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((137 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 5 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((129 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 4 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((121 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 3 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((113 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 2 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((105 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 1 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((97 / 256)  * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256 ) * this.canvas.width), ((3 / 222) * this.canvas.height));\n        if ( this.health <= 0 ) this.ctx.drawImage(this.pImg, 268, 561, 6, 3, ((89 / 256) * this.canvas.width), ((153 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((3 / 222) * this.canvas.height));\n\n      let tens = Math.floor(this.score / 10);\n      let ones = this.score % 10;\n      \n      this.ctx.drawImage(this.pImg, this.scoreFrames[tens], 571, 6, 7, ((169 / 256) * this.canvas.width), ((200 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((7 / 222) * this.canvas.height));\n      this.ctx.drawImage(this.pImg, this.scoreFrames[ones], 571, 6, 7, ((177 / 256) * this.canvas.width), ((200 / 222) * this.canvas.height), ((6 / 256) * this.canvas.width), ((7 / 222) * this.canvas.height));\n      \n  }\n}\n","import Enemy from './enemy';\nimport Background from './background';\nimport Player from './player';\n\nexport default class Game {\n    constructor(canvas, ctx, bgCtx, pCtx) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.bgCtx = bgCtx;\n        this.pCtx = pCtx;\n        this.background = new Background(canvas, bgCtx, 1.0);\n        this.focused = true;\n        this.startGame = false;\n        this.ships = [];\n        this.player = new Player(canvas, pCtx);\n        this.words = [];\n        this.startPositions = [[96, 80], [172, 70], [63, 30], [120, 25], [197, 20]];\n        this.usedStartPos = [];\n        this.animate = this.animate.bind(this);\n        this.animateBackground = this.animateBackground.bind(this);\n        this.start = this.start.bind(this);\n        this.createEnemy = this.createEnemy.bind(this);\n        this.generateEnemies = this.generateEnemies.bind(this);\n        this.generateAttacks = this.generateAttacks.bind(this);\n        this.enemyAttack = this.enemyAttack.bind(this);\n    }\n\n    animateBackground() {\n        this.bgCtx.canvas.width = window.innerWidth;\n        this.bgCtx.canvas.height = window.innerHeight;\n        this.pCtx.canvas.width = window.innerWidth;\n        this.pCtx.canvas.height = window.innerHeight;\n        this.background.animate();\n        this.player.animate();\n\n    }\n\n    animate() {\n        this.ctx.canvas.width = window.innerWidth;\n        this.ctx.canvas.height = window.innerHeight;\n        for (let i = 0; i < this.ships.length; i++){\n            const ship = this.ships[i];\n            if (ship.rendered){\n                ship.animate();\n                // if (ship.dz >= 1) {\n                //     this.player.health -= 1;\n                //     ship.attacking = true;\n                //     // debugger\n                // }\n            } else {\n                this.ships.splice(i, 1);\n                this.words.splice(i, 1);\n            }\n        }\n        requestAnimationFrame(this.animate);\n        \n    }\n\n    start() {\n        if (!this.startGame) {\n            this.generateEnemies();\n            this.generateAttacks();\n\n        this.startGame = true;\n        const playerWord = document.getElementById('player-word');\n        playerWord.autofocus = true;\n        }\n        \n        window.onblur = () => this.focused = false;\n        window.onfocus = () => {\n            this.focused = true;\n            this.generateEnemies();\n            this.generateAttacks();\n\n        }\n\n        const playerWord = document.getElementById('player-word');\n        playerWord.autofocus = true;\n        this.canvas.addEventListener('click', ()=> playerWord.focus());\n        document.getElementById('bg-canvas').addEventListener('click', ()=> playerWord.focus());\n        document.getElementById('player-screen').addEventListener('click', ()=> playerWord.focus());\n\n\n        setInterval(this.animateBackground, 125);\n        this.animate();\n    }\n\n    createEnemy(canvas, ctx) {\n        if (this.startPositions.length) {\n            let enemy = new Enemy(canvas, ctx, .01, this.startPositions[0]);\n            this.ships.push(enemy);\n            this.words.push(enemy.word);\n            let x = this.startPositions.shift();\n            this.usedStartPos.push(x);\n        } \n    }\n\n    generateEnemies() {\n        let delay = Math.floor(Math.random() * 5000);\n        if (this.focused) {\n            setTimeout(()=>{\n                    this.createEnemy(this.canvas, this.ctx);\n                    this.generateEnemies();\n            }, delay - .2);\n        }\n    }\n\n    generateAttacks () {\n                let delay = Math.floor(Math.random() * 5000);\n        if (this.focused) {\n            setTimeout(()=>{\n                    if (this.ships.length) this.enemyAttack();\n                    this.generateAttacks();\n            }, delay - .2);\n        }\n    }\n\n    enemyAttack() {\n        let ship = this.ships[Math.floor(Math.random() * this.ships.length)];\n        if (!ship.attacking && ship.dz >= 1) {\n            ship.attacking = true;\n            this.player.health -=1;\n        }\n    }\n\n    checkWord(word) {\n        let i = this.words.indexOf(word);\n        if (i != -1) {\n            this.startPositions.push(this.ships[i].shipPos);\n            this.ships[i].rendered = false;\n            this.player.score += 1;\n        }\n    }\n\n\n}","import \"./styles/index.scss\";\nimport Game from './scripts/game';\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const canvas = document.getElementById(\"ship-game\");\n    const ctx = canvas.getContext('2d');\n    const bgCanvas = document.getElementById(\"bg-canvas\");\n    const bgCtx = bgCanvas.getContext('2d');\n    const pCanvas = document.getElementById(\"player-screen\");\n    const pCtx = pCanvas.getContext('2d');\n\n    const inputSection = document.getElementById(\"input-section\");\n    \n    const playerWord = document.getElementById('player-word');\n    playerWord.autofocus = true;\n\n    inputSection.addEventListener('submit', handleSubmit);\n    const newGame = new Game(canvas, ctx, bgCtx, pCtx);\n    \n    document.addEventListener(\"keypress\", removeSplash);\n\n    const startBtn = document.getElementById('start');\n    startBtn.addEventListener(\"click\", removeSplash);\n    \n    function removeSplash(e) {\n        // debugger\n        if ((e.key === 'Enter') || (e.type === \"click\")) {\n            const splash = document.getElementById(\"splash\");\n            splash.style.display = 'none';\n            document.removeEventListener(\"keypress\", removeSplash);\n            startBtn.removeEventListener(\"click\", removeSplash);\n            newGame.start();\n            playerWord.focus();\n        }\n    }\n\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        newGame.checkWord(playerWord.value.toLowerCase().trim());\n        inputSection.reset();\n    };\n\n\n\n});"],"sourceRoot":""}